# -*- coding: utf-8 -*-
"""K-Means clustering.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1npVHGfq0yCxxdtuKXCKfeKnsyQnm0NGe
"""

from sklearn.cluster import KMeans
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler

def perform_kmeans_clustering(data, n_clusters=3, random_state=42):
    data = data.dropna()
    scaler = StandardScaler()
    scaled_data = scaler.fit_transform(data)
    scaled_df = pd.DataFrame(scaled_data, columns=data.columns)
    kmeans = KMeans(n_clusters=n_clusters, random_state=random_state, n_init='auto')
    kmeans.fit(scaled_df)

    data['cluster'] = kmeans.labels_

    return data, kmeans

def visualize_clusters(data, x_col, y_col, cluster_col='cluster'):

    plt.figure(figsize=(10, 6))
    for cluster in data[cluster_col].unique():
        cluster_data = data[data[cluster_col] == cluster]
        plt.scatter(cluster_data[x_col], cluster_data[y_col], label=f'Cluster {cluster}')
    plt.xlabel(x_col)
    plt.ylabel(y_col)
    plt.title('K-Means Clustering')
    plt.legend()
    plt.show()

data = {'feature1': [1, 2, 3, 4, 5, 1, 2, 3, 4, 5],
        'feature2': [5, 4, 3, 2, 1, 5, 4, 3, 2, 1]}
df = pd.DataFrame(data)
clustered_df, kmeans_model = perform_kmeans_clustering(df, n_clusters=2)

print(clustered_df)

visualize_clusters(clustered_df, 'feature1', 'feature2')